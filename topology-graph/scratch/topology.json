{
  "items": {
    "router1": {
      "apiVersion": "v1beta3",
      "kind": "Node",
      "metadata": {
        "creationTimestamp": "2015-06-01T18:51:33Z",
        "name": "router1",
        "resourceVersion": "10065",
        "selfLink": "/api/v1beta3/nodes/node-1.rha",
        "uid": "router1"
      },
      "spec": {
        "externalID": "router1"
      },
      "status": {
        "capacity": {
          "cpu": "1",
          "memory": "4047776Ki"
        },
        "conditions": [{
          "lastHeartbeatTime": "2015-06-02T15:41:47Z",
          "lastTransitionTime": "2015-06-01T18:52:24Z",
          "reason": "kubelet is posting ready status",
          "status": "True",
          "type": "Ready"
        }],
        "nodeInfo": {
          "bootID": "d51f8e13-399c-4245-9e88-3091c4d1f6f2",
          "containerRuntimeVersion": "docker://1.6.0",
          "kernelVersion": "4.0.4-301.fc22.x86_64",
          "kubeProxyVersion": "v0.16.2-659-g63182318c5876b",
          "kubeletVersion": "v0.16.2-659-g63182318c5876b",
          "machineID": "0fed1fe218d1a8449292cce385ada4e6",
          "osImage": "Red Hat Enterprise Linux Atomic Host 7.1",
          "systemUUID": "0FED1FE2-18D1-A844-9292-CCE385ADA4E6"
        }
      }
    },
    "router2": {
      "apiVersion": "v1beta3",
      "kind": "Service",
      "metadata": {
        "creationTimestamp": "2015-06-01T18:51:33Z",
        "labels": {
          "component": "apiserver",
          "provider": "kubernetes"
        },
        "name": "router2",
        "namespace": "default",
        "resourceVersion": "5",
        "selfLink": "/api/v1beta3/namespaces/default/services/kubernetes",
        "uid": "router2"
      },
      "spec": {
        "portalIP": "10.254.0.2",
        "ports": [{
          "name": "",
          "port": 443,
          "protocol": "TCP",
          "targetPort": 443
        }],
        "selector": null,
        "sessionAffinity": "None"
      },
      "status": {}
    }
  },
  "relations": [ {
    "source": "router1",
    "target": "router2"
  }]
}